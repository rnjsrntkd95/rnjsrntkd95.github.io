<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[KUSG.io]]></title><description><![CDATA[Kwon Ku Sang record and portfolio]]></description><link>https://rnjsrntkd95.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 13 Jan 2020 13:09:13 GMT</lastBuildDate><item><title><![CDATA[about]]></title><description><![CDATA[권구상 (KUSANG KWON) 웹 백엔드 개발자를 꿈꾸는 권구상입니다. 현재 경기대학교 컴퓨터과학과 4학년 재학 중입니다. Python과 Django를 주로 다루며, 프로젝트 중심의 경험을 쌓는 것을 목표로 나아가고 있습니다.     GitHub…]]></description><link>https://rnjsrntkd95.github.io/resume-en/</link><guid isPermaLink="false">https://rnjsrntkd95.github.io/resume-en/</guid><pubDate>Sun, 12 Jan 2020 14:20:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;span-styletext-shadow-2px-2px-0-6fd1bd권구상-kusang-kwonspan&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#span-styletext-shadow-2px-2px-0-6fd1bd%EA%B6%8C%EA%B5%AC%EC%83%81-kusang-kwonspan&quot; aria-label=&quot;span styletext shadow 2px 2px 0 6fd1bd권구상 kusang kwonspan permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;span style=&quot;text-shadow: 2px 2px 0 #6fd1bd;&quot;&gt;권구상 (KUSANG KWON)&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;웹 백엔드 개발자를 꿈꾸는 권구상입니다.&lt;br&gt;
현재 경기대학교 컴퓨터과학과 4학년 재학 중입니다.&lt;br&gt;
Python과 Django를 주로 다루며, 프로젝트 중심의 경험을 쌓는 것을 목표로 나아가고 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;#Web&lt;/code&gt; &lt;code class=&quot;language-text&quot;&gt;#Back-End&lt;/code&gt; &lt;code class=&quot;language-text&quot;&gt;#Python&lt;/code&gt; &lt;code class=&quot;language-text&quot;&gt;#Django&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GitHub        &lt;a href=&quot;https://github.com/rnjsrntkd95&quot; target=&quot;_blank&quot;&gt;https://github.com/rnjsrntkd95&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Instagram   &lt;a href=&quot;https://www.instagram.com/kor_kusg&quot;&gt;https://www.instagram.com/kor_kusg&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Mail             &lt;strong&gt;rnjsrntkd95@gmail.com&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;span-styletext-shadow-2px-2px-0-6fd1bdactivityspan&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#span-styletext-shadow-2px-2px-0-6fd1bdactivityspan&quot; aria-label=&quot;span styletext shadow 2px 2px 0 6fd1bdactivityspan permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;span style=&quot;text-shadow: 2px 2px 0 #6fd1bd;&quot;&gt;Activity&lt;/span&gt;&lt;/h1&gt;
&lt;h3 id=&quot;programming-12th&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#programming-12th&quot; aria-label=&quot;programming 12th permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;&lt;a href=&quot;https://www.facebook.com/p.rogramming3k&quot;&gt;P’rogramming 12th&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;피로그래밍 12기로 활동 중이며 웹에 대한 이해와 Python과 Django를 활용한 웹 서버를 개발해보고 있습니다.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;period&lt;/strong&gt;       20.01~Current&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tech Experiences&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Git, HTML / CSS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;twitter page copy&lt;/li&gt;
&lt;li&gt;Bootstrap&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python / algorithm&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Baekjoon: 분해합, 1로 만들기(다이나믹 프로그래밍), 괄호(스택)&lt;/li&gt;
&lt;li&gt;카카오공채2020: 문자열압축, 괄호 변환&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Django&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;진행 중&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;span-styletext-shadow-2px-2px-0-6fd1bdexperiencespan&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#span-styletext-shadow-2px-2px-0-6fd1bdexperiencespan&quot; aria-label=&quot;span styletext shadow 2px 2px 0 6fd1bdexperiencespan permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;span style=&quot;text-shadow: 2px 2px 0 #6fd1bd;&quot;&gt;Experience&lt;/span&gt;&lt;/h1&gt;</content:encoded></item><item><title><![CDATA[[1로 만들기] 다이나믹 프로그래밍을 해보자]]></title><description><![CDATA[Baekjoon 1463번 문제 - 1로 만들기 문제는 되게 간단하다.  X가 3으로 나누어 떨어지면, 3으로 나눈다. X가 2로 나누어 떨어지면, 2로 나눈다. 1을 뺀다. 정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서…]]></description><link>https://rnjsrntkd95.github.io/algorithm/make_number_1/</link><guid isPermaLink="false">https://rnjsrntkd95.github.io/algorithm/make_number_1/</guid><pubDate>Sat, 11 Jan 2020 15:01:27 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1463&quot;&gt;Baekjoon 1463번 문제 - 1로 만들기&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;문제는 되게 간단하다. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;X가 3으로 나누어 떨어지면, 3으로 나눈다.&lt;/li&gt;
&lt;li&gt;X가 2로 나누어 떨어지면, 2로 나눈다.&lt;/li&gt;
&lt;li&gt;1을 뺀다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1로 만드는 연산횟수의 &lt;strong&gt;최솟값&lt;/strong&gt;을 출력해야 한다.&lt;/p&gt;
&lt;h2 id=&quot;깊이-우선-탐색dfs-너비-우선-탐색bfs&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B9%8A%EC%9D%B4-%EC%9A%B0%EC%84%A0-%ED%83%90%EC%83%89dfs-%EB%84%88%EB%B9%84-%EC%9A%B0%EC%84%A0-%ED%83%90%EC%83%89bfs&quot; aria-label=&quot;깊이 우선 탐색dfs 너비 우선 탐색bfs permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;깊이 우선 탐색(DFS), 너비 우선 탐색(BFS)&lt;/h2&gt;
&lt;p&gt;처음 문제를 접했을 때 재귀방식의 DFS, BFS가 떠올랐다. 그래서 무작정 코드를 다음과 같이 작성해보았다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# 파이썬을 이제 막 배운 초심자로서 코드가 복잡하고 파이썬 답지 않을 수 있다.
def make_one(n):
    min_count = 1000000
    if n == 1:
        return 0
    if n % 3 == 0:
        tmp = make_one(n // 3)
        if tmp &amp;lt; min_count:
            min_count = tmp
    if n % 2 == 0:
        tmp = make_one(n // 2)
        if tmp &amp;lt; min_count:
            min_count = tmp
    tmp = make_one(n - 1)
    if tmp &amp;lt; min_count:
        min_count = tmp
    return min_count + 1


quest = int(input())
print(make_one(quest))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;무작정 재귀방식으로 풀어보았다. 예제에 있던 입출력 결과가 다 동일하기에 제출했다. 시간초과가 발생했다. 이 문제에는 2초라는 시간 제한이 존재한다. 입력값에 5000의 숫자를 넣었더니 당연하게도 프로그램이 끝나질 않았다. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;시간복잡도란?&lt;/strong&gt; 문제를 해결하는데 걸리는 시간과 입력의 함수 관계를 가리킨다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;위의 문제를 예로 들자면 makeone이라는 함수가 &lt;strong&gt;O(n)&lt;/strong&gt;이라는 시간복잡도를 가진다고 가정하고 60을 입력했을 때 &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;3으로 나눠 20이 된다. &lt;/li&gt;
&lt;li&gt;2로 나눠 30이 된다. &lt;/li&gt;
&lt;li&gt;1을 빼서 59가 된다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;이렇게 세가지 경우의 수를 가질 수 있다. 재귀를 풀게 되면 이렇게 나온 숫자들을 또 다시 make_one함수의 매개변수로 넣어서 각각 같은 과정을 거치게 된다. 즉, 함수에 한번 들어갈 때마다 O(n)의 과정을 3번씩 거치게 되고 또 넘겨진 n값으로 계속 물고 물어져서 배수로 커져가는 시간복잡도를 확인할 수 있다.&lt;br&gt;
이렇게 되면 낮은 숫자일 때는 별 문제 없는 것처럼 보일 수 있지만 큰 숫자로 갈 수록 계산 시간이 엄청 늦어진다.&lt;/p&gt;
&lt;p&gt;이 과정에서 앞에 벽을 세운 것 마냥 답답했다. 자료구조를 배워 이제 막 해결하나 싶었는데 시간초과를 해결할 방법이 떠오르지 않았다. 그렇다고 풀이를 본다거나 포기하는 것은 자존심이 상할 것 같았다. 그러던 도중 페이지의 하단을 보니 문제의 분류가 표시되어 있는 것이 아닌가! 다이나믹 프로그래밍이라고 적혀있었다. 풀이를 보느니 이것을 공부해서 직접 적용해보는 것이 도움이 되리라 생각했다. &lt;/p&gt;
&lt;h2 id=&quot;다이나믹-프로그래밍dp&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8Ddp&quot; aria-label=&quot;다이나믹 프로그래밍dp permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;다이나믹 프로그래밍(DP)&lt;/h2&gt;
&lt;p&gt;다이나믹 프로그래밍은 &lt;strong&gt;하나의 문제는 단 한번만 풀도록 하는 알고리즘&lt;/strong&gt;이며 한 번 푼 것을 여러 번 다시 푸는 비효율적인 알고리즘을 개선시키는 방법이다.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;초기값&lt;/strong&gt;을 정하고 &lt;strong&gt;점화식&lt;/strong&gt;을 찾아낸 후 밑에서부터 차례로 구해나가 답을 알아내는 형태이다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def dynamic(n):
    storage = [0, 0, 1, 1]
    for up in range(4, n+1):
        check = 10000
        if up % 3 == 0:
            tmp = storage[up // 3]
            if tmp &amp;lt; check:
                check = tmp
        if up % 2 == 0:
            tmp = storage[up // 2]
            if tmp &amp;lt; check:
                check = tmp
        tmp = storage[up - 1]
        if tmp &amp;lt; check:
            check = tmp
        storage.append(check +1)
    return storage[n]

n = int(input())
print(dynamic(n))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;storage 리스트는 인덱스 번호값이 1로 만드는 연산횟수의 최솟값이 저장된다. 여기서 초기값으로 1의 경우 0, 2의 경우 1, 3의 경우 1이라는 초기값을 계산하고 리스트에 넣어두었다.&lt;/p&gt;
&lt;p&gt;보기 쉽게 딕셔너리로 나타내면 storage = {1:0, 2:1, 3:1}가 된다. 여기서 4의 연산최솟값을 구해야 된다하면 4는 3과 2로 떨어질 수 있고 우린 3에 대한 연산최솟값을 리스트에 갖고 있기 때문에 dynamic(4) = min(storage[3], storage[2])로 쉽게 구할 수 있다. 이렇게 구해진 4의 최솟값을 리스트에 추가시키고 5의 연산최솟값을 찾아 또 다시 저장한다. 이렇게 밑에서부터 차례로 구해나가다 보면 내가 입력한 값의 답을 알아낼 수 있게 된다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;이렇게 중복 계산을 제거하기 위해서 이전의 값을 저장해두는 것을 &lt;strong&gt;메모이제이션&lt;/strong&gt;이라고 한다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;과정 자체는 굉장히 복잡해 보이지만 시간복잡도에서는 굉장히 빠른 속도를 보인다. 점화식이 맞는 값을 찾아 리스트에서 값을 꺼내오기만 하면 되기 때문에 &lt;strong&gt;O(n)&lt;/strong&gt;이라고 볼 수 있다. (직접 코드를 입력해서 확인해보더라도 체감이 될 정도로 빠르다.)&lt;/p&gt;
&lt;p&gt;이것이 다이나믹 프로그래밍의 가장 큰 장점인 것 같다.&lt;/p&gt;
&lt;h2 id=&quot;부족한-점&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B6%80%EC%A1%B1%ED%95%9C-%EC%A0%90&quot; aria-label=&quot;부족한 점 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;부족한 점&lt;/h2&gt;
&lt;p&gt;문제를 풀어보면서 재귀방식은 프로그래머가 이해하기 쉽게 코드를 짤 수 있지만 복잡한 연산에서는 어울리지 않는 것 같고 다이나믹 프로그래밍은 메모리를 조금 더 사용해서 연산 시간을 대폭 줄이는 방식이라는 느낌을 받았다.&lt;/p&gt;
&lt;p&gt;다이나믹 프로그래밍을 처음 접했기 때문에 점화식을 세우는 과정이나 시간복잡도를 이해하는 부분에서 많은 부족함이 보이지만 지금은 문제를 해결했다는 점에서 만족감을 느끼고 있다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[IT동아리 피로그래밍 지원 후기]]></title><description><![CDATA[웹 개발 동아리인 피로그래밍 12기에 합격하였다. 피로그래밍은 Python과 Django…]]></description><link>https://rnjsrntkd95.github.io/activity/p&apos;irogarmming/</link><guid isPermaLink="false">https://rnjsrntkd95.github.io/activity/p&apos;irogarmming/</guid><pubDate>Wed, 01 Jan 2020 15:02:05 GMT</pubDate><content:encoded>&lt;p&gt;웹 개발 동아리인 &lt;strong&gt;피로그래밍 12기&lt;/strong&gt;에 합격하였다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.facebook.com/p.rogramming3k&quot;&gt;&lt;strong&gt;피로그래밍&lt;/strong&gt;&lt;/a&gt;은 Python과 Django를 활용한 웹 개발을 목표로 활동하는 동아리다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;지원동기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A7%80%EC%9B%90%EB%8F%99%EA%B8%B0&quot; aria-label=&quot;지원동기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;지원동기&lt;/h3&gt;
&lt;p&gt;이번 학기를 다니며 느낀 것이 크게 두가지 있었다. 경험의 중요성과 의지의 차이이다. 학교 수업에서는 개발자가 되기 위한 기초를 다진다는 느낌을 많이 받았다. 그렇다보니 의지가 부족한 친구들도 여럿 있어서 팀플을 진행할 때 어려움이 많았다. 하지만 전공자로서 &lt;strong&gt;자료구조, 알고리즘, 네트워크&lt;/strong&gt; 등 모두 고려하면서 개발할 수 있다면 그것이 나의 &lt;strong&gt;경쟁력&lt;/strong&gt;이 된다는 것은 알 수 있었다. 하지만 경험을 쌓을 수 있는 기회가 부족한 것 같아서 이번 학기가 끝나면 IT연합 동아리를 찾아 프로젝트를 진행하면서 경험을 쌓으리라 계획했다.&lt;/p&gt;
&lt;p&gt;피로그래밍에서 가장 마음에 들었던 부분은 &lt;code class=&quot;language-text&quot;&gt;Python&lt;/code&gt;과 &lt;code class=&quot;language-text&quot;&gt;Django&lt;/code&gt;를 활용한 웹 개발이라는 점이다. 평소에 Python과 Django에 관심을 두었던 나는 모집공고가 올라옴과 동시에 바로 지원했다. 아직 웹에 대한 지식은 전무하기 때문에 설렘과 처음해보는 대외활동에 긴장도 되었다. 또한 서류와 면접을 통과해야 활동할 수 있기 때문에 열정과 의지가 가득한 사람들이 모일 것 같다는 기대감도 생겼다.&lt;/p&gt;
&lt;h3 id=&quot;면접&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%A9%B4%EC%A0%91&quot; aria-label=&quot;면접 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;면접&lt;/h3&gt;
&lt;p&gt;면접은 3대 1 면접이었고 기술적인 질문보다는 내가 제출한 서류에 대한 질문과 협업을 할 때 갈등이 발생할 텐데 어떻게 대처할 것인가에 대한 질문이였다. (다른 글에서 협업에 대한 생각을 정리한 글을 업로드 하겠다.) 면접관 분들이 무표정이셔서 처음엔 위축됐지만 면접이 진행될수록 훨씬 부드러운 분위기로 전환되서 시간가는 줄 모르고 답변했던 것 같다. 사실 내가 대답을 하다보니깐 생각나는 것이 많아져서 면접관 분들이 ‘뭐 이렇게 말이 많나’라고 생각했을 수도 있을 것 같다.&lt;/p&gt;
&lt;h3 id=&quot;워크샵&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9B%8C%ED%81%AC%EC%83%B5&quot; aria-label=&quot;워크샵 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;워크샵&lt;/h3&gt;
&lt;p&gt;다행히도 합격문자를 받았고 이후 1박2일로 진행하는 워크샵은 필참이였다. 처음 갔을 땐 아무래도 어색한 시간이 컸지만 서로서로 친해지려고 노력하는 점이 보였기 때문에 금방 편해졌다. 또한 윗 기수분들도 먼저 다가와서 얘기해주셨다. 지금 생각하면 면접 때 무표정으로 질문하셨던 것은 포커페이스를 유지하신게 아닌가라는 생각이 들었다. 워크샵은 앞으로 같이 나아갈 28명의 12기들이 친해질 수 있는 기회를 마련해준 시간이였다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;모집 경쟁률은 107명이 지원해서 28명만 뽑았다고 한다.&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item></channel></rss>