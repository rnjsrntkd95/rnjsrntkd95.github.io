{"componentChunkName":"component---src-templates-blog-post-js","path":"/django/crud/","result":{"data":{"site":{"siteMetadata":{"title":"KUSG.io","author":"KU_SANG [RESUME]","siteUrl":"https://rnjsrntkd95.github.io","comment":{"disqusShortName":"","utterances":"rnjsrntkd95/rnjsrntkd95.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"2bd930e0-4b9a-51c5-9a63-06470dfc9ff1","excerpt":"웹을 배워가면서 많이 들렸던 단어들 중 하나가 CRUD이다. Django뿐만 아니라 앞으로 프로젝트를 진행하면서 반드시 개념을 제대로 잡고 있어야 할 것 같아 정리해보려고 한다. CRUD는 데이터 처리의 기본 기능을 뜻한다. Create 생성 Read 읽기 Update 수정 Delete 삭제 우리는 이 4가지를 쿼리 형식으로 데이터베이스에 적용하여 원하는 데이터를 가져오고 활용한다. 1. Create 생성 데이터의 생성은 SQL문법 중 INSERT 명령어로 실행된다.. INSERT…","html":"<p>웹을 배워가면서 많이 들렸던 단어들 중 하나가 CRUD이다. Django뿐만 아니라 앞으로 프로젝트를 진행하면서 반드시 개념을 제대로 잡고 있어야 할 것 같아 정리해보려고 한다.</p>\n<p>CRUD는 데이터 처리의 기본 기능을 뜻한다.</p>\n<ul>\n<li>Create 생성</li>\n<li>Read 읽기</li>\n<li>Update 수정</li>\n<li>Delete 삭제</li>\n</ul>\n<p>우리는 이 4가지를 쿼리 형식으로 데이터베이스에 적용하여 원하는 데이터를 가져오고 활용한다.</p>\n<h1 id=\"1-create-생성\" style=\"position:relative;\"><a href=\"#1-create-%EC%83%9D%EC%84%B1\" aria-label=\"1 create 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Create 생성</h1>\n<p>데이터의 생성은 SQL문법 중 INSERT 명령어로 실행된다..</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- INSERT문의 기초 문법</span>\n<span class=\"token comment\">--- []는 생략 가능</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> 테이블이름<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>속성리스트<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>값리스트<span class=\"token punctuation\">)</span></code></pre></div>\n<p>INSERT문은 상당히 간단하다. (테이블에 걸린 제약조건이 없다면…)</p>\n<p>먼저 사원(emp) 테이블에 새로운 사원에 대한 정보를 추가해보려한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">9001</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'디비아'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'SE'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7608</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이렇게 특정 속성을 지정해주지 않는다면 테이블에 존재하는 모든 속성들에 대해 값을 넣어주어야 한다. 만약 INSERT문이 실패하면 데이터의 삽입은 취소된다.</p>\n<p>다음으로 사원(emp) 테이블의 속성들 중 직책(job)과 이름(ename), 사원번호(empno)에 대해서만 값을 입력하고 데이터를 삽입해보겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp<span class=\"token punctuation\">(</span>job<span class=\"token punctuation\">,</span> ename<span class=\"token punctuation\">,</span> empno<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'SE'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'김나물'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9002</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위와 같이 테이블에 존재하는 특정 속성에 대해서만 값을 지정하여 삽입할 수도 있다.</p>\n<blockquote>\n<p>NULL값이 허용되지 않는 속성을 생략하면 오류가 발생한다.</p>\n</blockquote>\n<h1 id=\"2-read-읽기\" style=\"position:relative;\"><a href=\"#2-read-%EC%9D%BD%EA%B8%B0\" aria-label=\"2 read 읽기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Read 읽기</h1>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- SELECT문의 기초 문법</span>\n<span class=\"token comment\">--- []는 생략 가능</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">DISTINCT</span><span class=\"token punctuation\">]</span> 속성이름  \n<span class=\"token keyword\">FROM</span> 테이블이름  \n<span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> 검색조건<span class=\"token punctuation\">]</span>  \n<span class=\"token punctuation\">[</span><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> 속성이름<span class=\"token punctuation\">]</span>  \n<span class=\"token punctuation\">[</span><span class=\"token keyword\">HAVING</span> 검색조건<span class=\"token punctuation\">]</span>  \n<span class=\"token punctuation\">[</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 속성이름 <span class=\"token punctuation\">[</span><span class=\"token keyword\">ASC</span><span class=\"token operator\">|</span><span class=\"token keyword\">DESC</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  </code></pre></div>\n<p>사용자가 원하는 데이터를 DB에서 가져오고 싶으면 SELECT 명령어를 사용해서 가져올 수 있다.</p>\n<p>만약 사원(emp) 테이블에 속해있는 모든 사원의 이름(ename)과 직책(job)을 가져오고 싶다면 다음과 같이 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> ename<span class=\"token punctuation\">,</span> job  \n<span class=\"token keyword\">FROM</span> emp</code></pre></div>\n<p>이번엔 직책(job)이 MANAGER인 사원의 이름(ename)과 연봉(sal)을 가져오고 싶다면 WHERE문을 추가하여 조건을 걸어줄 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> ename<span class=\"token punctuation\">,</span> sal\n<span class=\"token keyword\">FROM</span> emp\n<span class=\"token keyword\">WHERE</span> job <span class=\"token operator\">=</span> <span class=\"token string\">'MANAGER'</span></code></pre></div>\n<h1 id=\"3-update-수정\" style=\"position:relative;\"><a href=\"#3-update-%EC%88%98%EC%A0%95\" aria-label=\"3 update 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Update 수정</h1>\n<p>DB에 저장된 데이터를 새로운 내용으로 변경하고 싶다면 UPDATE 명령어를 사용해서 데이터를 갱신한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- UPDATE문의 기초 문법</span>\n<span class=\"token comment\">--- []는 생략 가능</span>\n\n<span class=\"token keyword\">UPDATE</span> 테이블이름\n<span class=\"token keyword\">SET</span> 속성명<span class=\"token number\">1</span> <span class=\"token operator\">=</span> 값<span class=\"token number\">1</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> 속성명<span class=\"token number\">2</span> <span class=\"token operator\">=</span> 값<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> 조건문<span class=\"token punctuation\">]</span></code></pre></div>\n<p>WHERE 절을 생략할 수도 있지만, 이 경우 모든 행을 일괄적으로 갱신하므로 주의해야 한다. 보통 WHERE절을 사용하여 특정 속성값을 수정한다.</p>\n<p>사원(emp)들 중 사원번호(empno)가 9001인 사원을 찾아 직책(job)을 ‘CEO’ 로 수정해주려 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> emp\n<span class=\"token keyword\">SET</span> job <span class=\"token operator\">=</span> <span class=\"token string\">'CEO'</span>\n<span class=\"token keyword\">WHERE</span> empno <span class=\"token operator\">=</span> <span class=\"token number\">9001</span></code></pre></div>\n<h1 id=\"4-delete-삭제\" style=\"position:relative;\"><a href=\"#4-delete-%EC%82%AD%EC%A0%9C\" aria-label=\"4 delete 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Delete 삭제</h1>\n<p>더이상 쓸모없게된 데이터 또는 사용자가 DB에서 저장해두고 싶지 않은 데이터는 DELETE 명령어로 쿼리문을 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">--- DELETE문의 기초 문법</span>\n<span class=\"token comment\">--- []는 생략 가능</span>\n\n<span class=\"token keyword\">DELETE</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">FROM</span><span class=\"token punctuation\">]</span> 테이블이름\n<span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span><span class=\"token punctuation\">]</span> 조건문</code></pre></div>\n<p>UPDATE의 WHERE절과 똑같이 생략할 수도 있지만, <strong>모든 행을 일괄적으로 삭제해버리므로 주의해야한다.</strong> (테이블에 존재하는 모든 값이 사라질 수 있다.)</p>\n<p>사원(emp) 테이블의 사원번호가 9002인 사원에 대한 정보를 삭제하려 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> emp\n<span class=\"token keyword\">WHERE</span> empno <span class=\"token operator\">=</span> <span class=\"token number\">9002</span></code></pre></div>\n<p><strong><em>데이터를 정확하게 사용하기 위해선 CRUD와 같은 개념들을 확실히 짚고 넘어가는 것이 좋겠다!</em></strong></p>","frontmatter":{"title":"CRUD","date":"May 02, 2021"}}},"pageContext":{"slug":"/django/crud/","previous":{"fields":{"slug":"/django/model-relationships/"},"frontmatter":{"title":"Model Relationships 이해","date":"January 25, 2020","category":"django","draft":false}},"next":{"fields":{"slug":"/algorithm/shortest-distance/"},"frontmatter":{"title":"[BFS] 게임 맵 최단거리 - Level 2 (프로그래머스)","date":"May 26, 2021","category":"algorithm","draft":false}}}},"staticQueryHashes":["3128451518","96099027"]}