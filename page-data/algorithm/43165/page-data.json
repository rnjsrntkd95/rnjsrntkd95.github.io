{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/43165/","result":{"data":{"site":{"siteMetadata":{"title":"KUSG.io","author":"KU_SANG [RESUME]","siteUrl":"https://rnjsrntkd95.github.io","comment":{"disqusShortName":"","utterances":"rnjsrntkd95/rnjsrntkd95.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"6169371c-2b8b-5ac7-b06b-8d1770a0452a","excerpt":"타겟 넘버 문제 소개 n개의 음이 아닌 정수가 있습니다. 이 수를 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 예를 들어 로 숫자 3을 만들려면 다음 다섯 방법을 쓸 수 있습니다. 사용할 수 있는 숫자가 담긴 배열 numbers, 타겟 넘버 target이 매개변수로 주어질 때 숫자를 적절히 더하고 빼서 타겟 넘버를 만드는 방법의 수를 return 하도록 solution 함수를 작성해주세요. 시나리오 모든 경우를 다 확인해봐야하기 때문에 DFS나 BFS나 비슷할 것 같다. \nDFS…","html":"<blockquote>\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/43165\">타겟 넘버</a></p>\n</blockquote>\n<h3 id=\"문제-소개\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%86%8C%EA%B0%9C\" aria-label=\"문제 소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 소개</h3>\n<p>n개의 음이 아닌 정수가 있습니다. 이 수를 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 예를 들어 <code class=\"language-text\">[1, 1, 1, 1, 1]</code>로 숫자 3을 만들려면 다음 다섯 방법을 쓸 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">-1+1+1+1+1 = 3\n+1-1+1+1+1 = 3\n+1+1-1+1+1 = 3\n+1+1+1-1+1 = 3\n+1+1+1+1-1 = 3</code></pre></div>\n<p>사용할 수 있는 숫자가 담긴 배열 numbers, 타겟 넘버 target이 매개변수로 주어질 때 숫자를 적절히 더하고 빼서 타겟 넘버를 만드는 방법의 수를 return 하도록 solution 함수를 작성해주세요.</p>\n<h2 id=\"시나리오\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4\" aria-label=\"시나리오 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시나리오</h2>\n<p>모든 경우를 다 확인해봐야하기 때문에 DFS나 BFS나 비슷할 것 같다.\nDFS 연습 겸 풀이했다.</p>\n<ol>\n<li>numbers를 하나씩 순회하면서 양수일 경우와 음수일 경우를 고려해야한다. </li>\n<li>위의 예제에선 숫자를 다섯번만 더하거나 빼야하기 때문에 현재 몇번 연산하였는지 횟수와 현재까지의 합을 묶어서 스택에 push</li>\n<li>반복문은 stack이 비어지면 멈추고, 반복 시 pop하였을 때 연산횟수(n\n)이 numbers의 길이와 같다면 target과 비교한다.</li>\n</ol>\n<h2 id=\"문제-풀이\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4\" aria-label=\"문제 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 풀이</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        base<span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n        <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> target <span class=\"token operator\">==</span> base<span class=\"token punctuation\">:</span> \n                answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">continue</span>\n        \n        stack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>base<span class=\"token operator\">+</span>numbers<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        stack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>base<span class=\"token operator\">-</span>numbers<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> answer</code></pre></div>","frontmatter":{"title":"[DFS] 타겟 넘버 - Level 2 (프로그래머스)","date":"May 29, 2021"}}},"pageContext":{"slug":"/algorithm/43165/","previous":{"fields":{"slug":"/algorithm/43163/"},"frontmatter":{"title":"[BFS] 단어 변환 - Level 3 (프로그래머스)","date":"May 29, 2021","category":"algorithm","draft":false}},"next":{"fields":{"slug":"/algorithm/42883/"},"frontmatter":{"title":"[그리디] 큰 수 만들기 - Level 2 (프로그래머스)","date":"June 25, 2021","category":"algorithm","draft":false}}}},"staticQueryHashes":["3128451518","96099027"]}