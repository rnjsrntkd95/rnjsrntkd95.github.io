{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/77885/","result":{"data":{"site":{"siteMetadata":{"title":"KUSG.io","author":"KU_SANG [RESUME]","siteUrl":"https://rnjsrntkd95.github.io","comment":{"disqusShortName":"","utterances":"rnjsrntkd95/rnjsrntkd95.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"52b4a1b0-6512-5585-965d-91a842e66f62","excerpt":"2개 이하로 다른 비트 문제 소개 양의 정수 x에 대한 함수 f(x)를 다음과 같이 정의합니다. x보다 크고 x와 비트가 1~2개 다른 수들 중에서 제일 작은 수 예를 들어, f(2) = 3 입니다. 다음 표와 같이 2보다 큰 수들 중에서 비트가 다른 지점이 2개 이하이면서 제일 작은 수가 3이기 때문입니다. f(7) = 11 입니다. 다음 표와 같이 7보다 큰 수들 중에서 비트가 다른 지점이 2개 이하이면서 제일 작은 수가 11이기 때문입니다. 정수들이 담긴 배열 numbers…","html":"<blockquote>\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/77885\">2개 이하로 다른 비트</a></p>\n</blockquote>\n<h3 id=\"문제-소개\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%86%8C%EA%B0%9C\" aria-label=\"문제 소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 소개</h3>\n<p>양의 정수 x에 대한 함수 f(x)를 다음과 같이 정의합니다.</p>\n<ul>\n<li>x보다 크고 x와 비트가 1~2개 다른 수들 중에서 제일 작은 수</li>\n</ul>\n<p>예를 들어,</p>\n<ul>\n<li>f(2) = 3 입니다. 다음 표와 같이 2보다 큰 수들 중에서 비트가 다른 지점이 2개 이하이면서 제일 작은 수가 3이기 때문입니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">수  비트        다른 비트의 개수\n2   000...0010  \n3   000...0011  1</code></pre></div>\n<p>f(7) = 11 입니다. 다음 표와 같이 7보다 큰 수들 중에서 비트가 다른 지점이 2개 이하이면서 제일 작은 수가 11이기 때문입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">수  비트        다른 비트의 개수\n7   000...0111  \n8   000...1000  4\n9   000...1001  3\n10  000...1010  3\n11  000...1011  2</code></pre></div>\n<p>정수들이 담긴 배열 numbers가 매개변수로 주어집니다. numbers의 모든 수들에 대하여 각 수의 f 값을 배열에 차례대로 담아 return 하도록 solution 함수를 완성해주세요.</p>\n<h2 id=\"시나리오\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4\" aria-label=\"시나리오 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시나리오</h2>\n<p>1부터 2진수로 변환하여 찾아나갔다.</p>\n<ol>\n<li>맨 마지막 비트가 ‘0’이라면 ‘1’로만 바꿔준다. 1개의 비트를 바꿈과 동시에 제일 작은 수가 된다.</li>\n<li>\n<p>맨 마지막 비트가 ‘1’이라면 ‘01’로 이루어진 부분을 찾아 ‘10’으로 바꿔준다. 2개의 비트를 바꾼다.</p>\n<ul>\n<li>0111 이라면 1011로 바꾼다. f(7) = 11이다.</li>\n<li>11100010111 이라면 11100011011으로 바꾼다.</li>\n</ul>\n</li>\n<li>\n<p>11111과 같이 1 비트로만 구성된 경우를 대비하여 모든 비트의 앞에 0을 추가함으로서 01을 찾을 수 있도록 하였다. </p>\n<ul>\n<li>011111 -> 101111</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"문제-풀이\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4\" aria-label=\"문제 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 풀이</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 2진수 변환</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">dec_to_bin</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'0'</span>\n    <span class=\"token builtin\">bin</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token keyword\">while</span> n <span class=\"token operator\">//</span> <span class=\"token number\">2</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">bin</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">bin</span>\n        n <span class=\"token operator\">=</span> n <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n        \n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"1\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">bin</span>\n\n<span class=\"token comment\"># 10진수 변환</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">bin_to_dec</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    digit <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    dec <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> <span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> s <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span>\n            dec <span class=\"token operator\">+=</span> digit\n        digit <span class=\"token operator\">*=</span> <span class=\"token number\">2</span>\n    \n    <span class=\"token keyword\">return</span> dec\n     \n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> number <span class=\"token keyword\">in</span> numbers<span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">bin</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span> <span class=\"token operator\">+</span> dec_to_bin<span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">bin</span> <span class=\"token operator\">==</span> <span class=\"token string\">'00'</span><span class=\"token punctuation\">:</span>\n            answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">continue</span>\n        \n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">bin</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">:</span>\n            answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>bin_to_dec<span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">continue</span>\n\n        new_bin <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n        <span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> <span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">bin</span><span class=\"token punctuation\">[</span>s<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>s<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"01\"</span><span class=\"token punctuation\">:</span>\n                new_bin <span class=\"token operator\">=</span> <span class=\"token builtin\">bin</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>s<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"10\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">bin</span><span class=\"token punctuation\">[</span>s<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n                <span class=\"token keyword\">break</span>\n        \n        answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>bin_to_dec<span class=\"token punctuation\">(</span>new_bin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                          \n    <span class=\"token keyword\">return</span> answer</code></pre></div>","frontmatter":{"title":"2개 이하로 다른 비트 - 월간 코드 챌린지 시즌2","date":"June 27, 2021"}}},"pageContext":{"slug":"/algorithm/77885/","previous":{"fields":{"slug":"/algorithm/70129/"},"frontmatter":{"title":"이진 변환 반복하기 - 월간 코드 챌린지 시즌2","date":"June 26, 2021","category":"algorithm","draft":false}},"next":{"fields":{"slug":"/algorithm/42884/"},"frontmatter":{"title":"[그리디] 단속카메라 - Level 3 (프로그래머스)","date":"June 28, 2021","category":"algorithm","draft":false}}}},"staticQueryHashes":["3128451518","96099027"]}