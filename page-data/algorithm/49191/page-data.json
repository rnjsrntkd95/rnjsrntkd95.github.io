{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/49191/","result":{"data":{"site":{"siteMetadata":{"title":"KUSG.io","author":"KU_SANG [RESUME]","siteUrl":"https://rnjsrntkd95.github.io","comment":{"disqusShortName":"","utterances":"rnjsrntkd95/rnjsrntkd95.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"038e0eda-9425-52e3-b8e6-4c8c02ecf7fc","excerpt":"순위 문제 소개 n명의 권투선수가 권투 대회에 참여했고 각각 1번부터 n번까지 번호를 받았습니다. 권투 경기는 1대1 방식으로 진행이 되고, 만약 A 선수가 B 선수보다 실력이 좋다면 A 선수는 B 선수를 항상 이깁니다. 심판은 주어진 경기 결과를 가지고 선수들의 순위를 매기려 합니다. 하지만 몇몇 경기 결과를 분실하여 정확하게 순위를 매길 수 없습니다. 선수의 수 n, 경기 결과를 담은 2차원 배열 results가 매개변수로 주어질 때 정확하게 순위를 매길 수 있는 선수의 수를 return…","html":"<blockquote>\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/49191\">순위</a></p>\n</blockquote>\n<h3 id=\"문제-소개\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%86%8C%EA%B0%9C\" aria-label=\"문제 소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 소개</h3>\n<p>n명의 권투선수가 권투 대회에 참여했고 각각 1번부터 n번까지 번호를 받았습니다. 권투 경기는 1대1 방식으로 진행이 되고, 만약 A 선수가 B 선수보다 실력이 좋다면 A 선수는 B 선수를 항상 이깁니다. 심판은 주어진 경기 결과를 가지고 선수들의 순위를 매기려 합니다. 하지만 몇몇 경기 결과를 분실하여 정확하게 순위를 매길 수 없습니다.</p>\n<p>선수의 수 n, 경기 결과를 담은 2차원 배열 results가 매개변수로 주어질 때 정확하게 순위를 매길 수 있는 선수의 수를 return 하도록 solution 함수를 작성해주세요.</p>\n<h2 id=\"시나리오\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4\" aria-label=\"시나리오 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시나리오</h2>\n<ol>\n<li>\n<p>입력 받은 경기 결과를 보기 쉽게 정리한다.</p>\n<ul>\n<li>4번이 3번을 이겼으면, 3번은 4번에게 졌다. (wins, loses)</li>\n</ul>\n</li>\n<li>\n<p>저장된 경기 결과들을 토대로 절대적인 경기 결과를 추가한다. 예를 들어</p>\n<ul>\n<li>1번이 2번을 이겼다면, 2번은 1번이 진 3번에게도 진다.</li>\n<li>4번이 5번에게 졌다면, 5번은 4번이 이긴 6번에게도 이긴다.</li>\n</ul>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 아래로 보세요.</span>\n\n<span class=\"token comment\">## 첫 번째 예시         ## 두 번째 예시</span>\n<span class=\"token comment\"># 제 1 경기 </span>\n    <span class=\"token number\">3</span>번 <span class=\"token punctuation\">(</span>승<span class=\"token punctuation\">)</span>            <span class=\"token number\">5</span>번 <span class=\"token punctuation\">(</span>승<span class=\"token punctuation\">)</span>    \n    <span class=\"token number\">1</span>번 <span class=\"token punctuation\">(</span>패<span class=\"token punctuation\">)</span>            <span class=\"token number\">4</span>번 <span class=\"token punctuation\">(</span>패<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 제 2 경기 </span>\n    <span class=\"token number\">1</span>번 <span class=\"token punctuation\">(</span>승<span class=\"token punctuation\">)</span>            <span class=\"token number\">4</span>번 <span class=\"token punctuation\">(</span>승<span class=\"token punctuation\">)</span>\n    <span class=\"token number\">2</span>번 <span class=\"token punctuation\">(</span>패<span class=\"token punctuation\">)</span>            <span class=\"token number\">6</span>번 <span class=\"token punctuation\">(</span>패<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>          <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>\n<span class=\"token comment\"># 도출된 결과</span>\n    <span class=\"token number\">3</span>번 <span class=\"token punctuation\">(</span>승<span class=\"token punctuation\">)</span>            <span class=\"token number\">5</span>번 <span class=\"token punctuation\">(</span>승<span class=\"token punctuation\">)</span>\n    <span class=\"token number\">2</span>번 <span class=\"token punctuation\">(</span>패<span class=\"token punctuation\">)</span>            <span class=\"token number\">6</span>번 <span class=\"token punctuation\">(</span>패<span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"3\">\n<li>이긴 경기 수와 진 경기 수의 합이 자신을 제외한 n-1과 같다면 모든 선수와 경기를 한 것이다. 즉, 해당 선수의 순위를 확신할 수 있다.</li>\n</ol>\n<h3 id=\"고민된-점\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EB%AF%BC%EB%90%9C-%EC%A0%90\" aria-label=\"고민된 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고민된 점</h3>\n<p>시나리오 2번을 구상할 때 고민되는 부분이 있었다.\n내가 선수 1번이고 선수 2번을 이겼을 때,</p>\n<ol>\n<li>\n<p>2번 선수를 이겼으니, 2번 선수가 이긴 선수도 내가 이긴다.</p>\n<ul>\n<li>1번의 이긴 경기 이력에 2번 선수가 이긴 선수들을 포함</li>\n</ul>\n</li>\n<li>\n<p>2번 선수를 이겼으니, 1번(나)이 진 선수들은 2번도 진다.</p>\n<ul>\n<li>2번의 진 경기 이력에 1번(나)의 진 선수들을 포함.</li>\n</ul>\n</li>\n</ol>\n<p>이 두 가지 경우이다. 비슷해보이지만 경기 이력 반영을 나에게 하느냐, 이기거나 진 선수에게 하느냐의 차이가 있다.</p>\n<p>말로 써내려갔을 땐 결국 모두 추가되니깐 결과는 같을 것이라 생각했다. 하지만 첫 번째 경우 테스트 케이스 2,7,8,9에서 실패가 발생한다. </p>\n<p>원인을 분석해보면 반복문으로 선수를 하나씩 살펴보면서 해당 경우들을 반복문으로 추가할 때, 자신의 인덱스 위치에서 자신의 승리, 패배 이력에 추가하게 되면(첫 번째 경우) 먼저 추가한 선수일 수록 추후에 시행되는 결과물들이 반영되지 않는다. 즉, 미완성된 경기이력을 가지고 반영한 꼴이 된다.</p>\n<p>때문에, 자신의 인덱스 위치에서 자신이 승리한 선수 또는 패배한 선수의 경기 이력을 갱신해줘야 한다.</p>\n<p>말이 복잡하지만 두 경우를 모두 구현해보면 차이점이 나타날 것이다.</p>\n<p>또 다른 꼼수?로는 서로의 경기 이력들을 반영하는 과정을 2번씩 반복하면 풀리긴 한다.😀 하지만 시간복잡도에서 좋지 않으니 PASS~</p>\n<h2 id=\"문제-풀이\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4\" aria-label=\"문제 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 풀이</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    wins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    loses <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    \n    <span class=\"token keyword\">for</span> A<span class=\"token punctuation\">,</span> B <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">:</span>\n        wins<span class=\"token punctuation\">[</span>A<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span>\n        loses<span class=\"token punctuation\">[</span>B<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> loser <span class=\"token keyword\">in</span> wins<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            loses<span class=\"token punctuation\">[</span>loser<span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span><span class=\"token operator\">=</span> loses<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> winner <span class=\"token keyword\">in</span> loses<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            wins<span class=\"token punctuation\">[</span>winner<span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span><span class=\"token operator\">=</span> wins<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n            \n    <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>wins<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>wins<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>loses<span class=\"token punctuation\">[</span>w<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>","frontmatter":{"title":"[그래프] 순위 - Level 3 (프로그래머스)","date":"June 29, 2021"}}},"pageContext":{"slug":"/algorithm/49191/","previous":{"fields":{"slug":"/algorithm/42884/"},"frontmatter":{"title":"[탐욕법] 단속카메라 - Level 3 (프로그래머스)","date":"June 28, 2021","category":"algorithm","draft":false}},"next":{"fields":{"slug":"/algorithm/49189/"},"frontmatter":{"title":"[그래프] 가장 먼 노드 - Level 3 (프로그래머스)","date":"June 29, 2021","category":"algorithm","draft":false}}}},"staticQueryHashes":["3128451518","96099027"]}